print(len("，"))

# 在 Python 中，字符串的长度是通过 `len()` 函数来获取的，返回的是字符串的字符数（即 Unicode 字符的个数），而不是字节数。因此，Python 输出的字符串的长度都是 1，是因为它计算的是字符数量，而不是字符的字节数。
#
# 对于英文字符，它们通常只占用一个字节（在 UTF-8 编码中），而中文字符则通常占用多个字节（一般是 3 个字节），但 Python 计算的是字符本身的数量，而不是实际的字节占用情况。
#
# 如果你想查看字符串的字节长度，可以使用 `encode()` 方法将字符串转换为字节序列，然后计算字节序列的长度。例如：

# ```python
s = "hello 你好"
print(len(s))  # 输出字符数
print(len(s.encode('utf-8')))  # 输出字节数=6（英文字符6个）*1+2（中文字符2个）*3（1个中文字符在utf-8编码格式下占3个字节）
print(len(s.encode('gbk')))
print("+++++++++++++++++++++++++++++++单个字符+++实践时间++++++++++++++++++++++++++++++++++++")

'''在 UTF-8 编码中，**单个英文字符的大小写字节数是一样的**。也就是说，无论是大写字母（如 `A`）还是小写字母（如 `a`），它们都占用 **1 个字节**。

### 例子：
```python
s_upper = "A"  # 大写字母
s_lower = "a"  # 小写字母
print(len(s_upper.encode('utf-8')))  # 输出字节数
print(len(s_lower.encode('utf-8')))  # 输出字节数
```

无论是 `'A'` 还是 `'a'`，它们在 UTF-8 编码下都占用 1 个字节。

### 为什么是这样的？
英文字符（包括大小写字母、数字、标点符号等）都属于 **ASCII 字符集**，而 ASCII 字符集的字符在 UTF-8 编码下始终占用 1 个字节。因此，大写字母和小写字母在字节数上是相同的。

### 其他编码：
- 在 **UTF-16** 编码中，英文字符（包括大小写字母）通常占用 **2 个字节**，无论大小写。
- 在 **UTF-32** 编码中，所有字符都占用 **4 个字节**，包括英文大小写字母。

总结来说，在 UTF-8 编码中，英文字符的大小写字节数是相同的，都是 1 字节。'''
e="e" #大小写是一样的
c="中"
print("E的字符数为:\n"+str(len(e)))  # 输出字符数
print("在编码格式为utf-8中，'E'的字节数为:\n"+str(len(e.encode('utf-8'))))  # 输出字节数，发现一个英文字母在编码格式为utf-8下，字节数为1;
print("在编码格式为gbk中，'E'的字节数为:\n"+str(len(e.encode('gbk'))))    # 输出字节数，发现一个英文字母在编码格式为gbk下，字节数为1;
print("'中'的字符数为:\n"+str(len(c)))  # 输出字符数
print("在编码格式为utf-8中，'中'的字节数为:\n"+str(len(c.encode('utf-8'))))  # 输出字节数，发现一个中文字在编码格式为utf-8下，字节数为3;
print("在编码格式为utf-8中，'中'的字节数为:\n"+str(len(c.encode('gbk'))))
# ```

# 这样可以看到字符和字节的不同。
#
#
# 在 Python 中，字符的字节数并不固定为 2 字节，而是取决于字符串的编码方式。
#
# - 在 **Unicode** 中，每个字符的存储并不是固定的，它的字节数取决于所使用的编码格式（如 UTF-8、UTF-16、UTF-32 等）。
# - 例如，UTF-8 编码中的字符可以占用 1 到 4 个字节，而 UTF-16 编码中的字符一般占用 2 个字节，但某些特殊字符可能会占用 4 个字节。
#
# ### UTF-8 编码：
# - 英文字符（例如 ASCII 字符）通常占用 **1 字节**。
# - 中文字符（例如汉字）通常占用 **3 字节**。
#
# ### UTF-16 编码：
# - 大多数常见字符（包括英文字符和大部分中文字符）通常占用 **2 字节**。
# - 一些特殊字符（例如表情符号）可能占用 **4 字节**。
#
# ### 举个例子：
# ```python

# s = "hello 你好"
# print(len(s))  # 输出字符数
# print(len(s.encode('utf-8')))  # 输出字节数（UTF-8 编码）
# print(len(s.encode('utf-16')))  # 输出字节数（UTF-16 编码）

# ```
#
# 在 `UTF-8` 中：
# - "hello" 每个字符占用 1 字节，总共 5 字节。
# - "你好" 中每个字符占用 3 字节，总共 6 字节。
# 所以，`UTF-8` 编码的总字节数是 11。
#
# 在 `UTF-16` 中：
# - "hello" 每个字符占用 2 字节，总共 10 字节。
# - "你好" 每个字符占用 2 字节，总共 4 字节。
# 所以，`UTF-16` 编码的总字节数是 14。
#
# ### 总结：
# - 1 个字符在不同的编码格式下占用的字节数是不同的。
# - **UTF-8**：英文字符占 1 字节，中文字符占 3 字节。
# - **UTF-16**：大多数字符占 2 字节，特殊字符占 4 字节。
#
# 所以，不是所有字符都等于 2 字节，而是取决于编码。